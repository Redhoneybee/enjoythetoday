{"version":3,"sources":["routes/Home.js","reducers/Users.js","routes/Auth.js","components/Router.js","components/App.js","reducers/root.js","store.js","index.js"],"names":["Home","userSlice","createSlice","name","initialState","reducers","setUser","state","action","payload","actions","Auth","useState","setName","dispatch","useDispatch","onSubmit","e","preventDefault","length","type","placeholder","required","value","onChange","target","AppRouter","userObj","style","width","maxWidth","display","justifyContent","exact","path","App","useSelector","user","combineReducers","reducer","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"qMAUeA,EARF,WACT,OACI,8BACI,2C,gBCHNC,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAc,GACdC,SAAU,CACNC,QAAS,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,YAI5BH,EAAYL,EAAUS,QAAtBJ,QAEAL,ICwBAU,EAhCF,WACT,MAAwBC,mBAAS,IAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACMC,EAAWC,cAejB,OACI,mCACI,uBAAMC,SATG,SAACC,GACdA,EAAEC,iBAEkB,IAAhBf,EAAKgB,QACLL,EAASR,EAAQH,KAKjB,UACI,uBACIiB,KAAK,OACLC,YAAY,mCACZC,UAAQ,EACRC,MAAOpB,EACPqB,SArBC,SAACP,GACd,IAAkBM,EAAYN,EAAtBQ,OAAUF,MAElBV,EAAQU,MAmBA,uBAAOH,KAAK,SAASG,MAAM,uBCG5BG,EA3BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,qBAAKC,MAAO,CACRC,MAAO,OACPC,SAAU,IACVC,QAAS,OACTC,eAAgB,UAJpB,SAMKL,EACG,mCACI,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMP,QAASA,QAIvB,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,aCPbC,EATH,WACV,IAAMR,EAAUS,aAAY,SAAA7B,GAAK,OAAIA,EAAM8B,QAC3C,OACE,mCACE,cAAC,EAAD,CAAWV,QAASA,O,OCLXtB,EAJEiC,YAAgB,CAC7BD,KAAMpC,EAAUsC,UCCLC,EAFDC,YAAe,CAAEF,QAASlC,I,MCIxCqC,IAASC,OAEP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEAI,SAASC,eAAe,W","file":"static/js/main.a9225de3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Home = () => {\n    return (\n        <div>\n            <span>Home</span>\n        </div>\n    );\n}\n\nexport default Home;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: \"\",\n    reducers: {\n        setUser: (state, action) => action.payload\n    }\n});\n\nexport const { setUser } = userSlice.actions;\n\nexport default userSlice;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../reducers/Users\";\n\nconst Auth = () => {\n    const [name, setName] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const onChange = (e) => {\n        const { target: { value } } = e;\n\n        setName(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (name.length !== 0) {\n            dispatch(setUser(name));\n        }\n    }\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"너의 이름은?\"\n                    required\n                    value={name}\n                    onChange={onChange} />\n                <input type=\"submit\" value=\"시작\" />\n            </form>\n        </>\n    )\n}\n\nexport default Auth;","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"../routes/Home\";\nimport Auth from \"../routes/Auth\";\n\nconst AppRouter = ({ userObj }) => {\n    return (\n        <Router>\n            <Switch>\n                <div style={{\n                    width: \"100%\",\n                    maxWidth: 980,\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                }}>\n                    {userObj ?\n                        <>\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                        </>\n                        :\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    }\n                </div>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\n// routes\nimport Loading from \"./Loading\";\nimport AppRouter from \"./Router\";\n\nconst App = () => {\n  const userObj = useSelector(state => state.user)\n  return (\n    <>\n      <AppRouter userObj={userObj} />\n    </>\n  );\n}\n\nexport default App;","import { combineReducers } from \"@reduxjs/toolkit\";\nimport userSlice from \"./Users\";\n\nconst reducers = combineReducers({\n    user: userSlice.reducer\n});\n\nexport default reducers;\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport reducers from \"./reducers/root\";\n\nconst store = configureStore({ reducer: reducers });\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./styles.css\";\n\nReactDOM.render(\n\n  <Provider store={store} >\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}