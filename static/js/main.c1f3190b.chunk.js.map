{"version":3,"sources":["reducers/Users.js","images/game01.jpg","components/PlayList.js","routes/Home.js","routes/Auth.js","fbase.js","components/Game01/Rules.js","components/Game01/GameEnd.js","components/Game01/GameStart.js","routes/Game01.js","components/Router.js","components/App.js","reducers/root.js","store.js","index.js"],"names":["userSlice","createSlice","name","initialState","reducers","setUser","state","action","payload","actions","PlayList","src","game01","width","height","Home","userObj","dispatch","useDispatch","className","id","onClick","class","to","Auth","useState","setName","useEffect","document","querySelector","classList","add","onSubmit","e","preventDefault","length","type","placeholder","required","value","onChange","target","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storageService","storage","Rules","style","backgroundColor","borderRadius","color","maxWidth","marginTop","padding","display","flexDirection","justifyContent","alignItems","marginBottom","fontWeight","GameEnd","accuracy","speed","GameStart","round","setRound","problemImage","setProblemImage","items","setItems","answer","setAnswer","loading","setLoading","setAccuracy","setSpeed","startTime","setStartTime","storageRef","ref","AnimalList","max","getOtherChocie","itemsObj","other","Math","floor","random","indexOf","push","getImageName","animalEnName","imageNumber","toString","MappingData","suffleItems","l","i","j","x","Array","from","loadProblem","a","choose","imageName","child","getDownloadURL","url","Date","stopTime","map","item","ProblemNameData","Game01","mode","setMode","history","useHistory","onModeClick","console","log","AppRouter","exact","path","App","useSelector","user","combineReducers","reducer","store","configureStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c1f3190b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: \"\",\n    reducers: {\n        setUser: (state, action) => action.payload\n    }\n});\n\nexport const { setUser } = userSlice.actions;\n\nexport default userSlice;","export default __webpack_public_path__ + \"static/media/game01.5b770aa0.jpg\";","import React from \"react\";\nimport game01 from \"../images/game01.jpg\"\nconst PlayList = () =>\n    <img src={game01} width=\"240px\" height=\"240px\" />\n\n\nexport default PlayList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../reducers/Users\";\n\nimport PlayList from \"../components/PlayList\";\n\nconst Home = ({ userObj }) => {\n    const dispatch = useDispatch();\n    const onClick = () => dispatch(setUser(\"\"));\n\n    return (\n        <>\n            <div className=\"namePlace\">\n                <span><span className=\"strong\">{userObj}</span>님 어서오세요.</span>\n            </div>\n            <span id=\"edit\" className=\"btn\" onClick={onClick}>수정하기</span>\n            <div class=\"listPlace\">\n                <Link to=\"game01\">\n                    <PlayList />\n                </Link>\n            </div>\n        </>\n    );\n}\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../reducers/Users\";\n\nconst Auth = () => {\n    const [name, setName] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const onChange = (e) => {\n        const { target: { value } } = e;\n\n        setName(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (name.length !== 0) {\n            dispatch(setUser(name));\n        }\n    }\n\n    useEffect(() => {\n        document.querySelector('.nameForm').classList.add('visible');\n\n    }, []);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"nameForm\">\n                <input\n                    type=\"text\"\n                    placeholder=\"너의 이름은?\"\n                    required\n                    value={name}\n                    onChange={onChange}\n                    className=\"formInput\" />\n                <input className=\"formSubmit\" type=\"submit\" value=\"시작\" />\n            </form>\n        </>\n    )\n}\n\nexport default Auth;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC2Xkmj4DZ_PaJxew5G0DyX5sgvYXJ-fFQ\",\n    authDomain: \"enjoythetoday-ad23d.firebaseapp.com\",\n    projectId: \"enjoythetoday-ad23d\",\n    storageBucket: \"enjoythetoday-ad23d.appspot.com\",\n    messagingSenderId: \"63282346666\",\n    appId: \"1:63282346666:web:ab052f562f06c5eca3aed3\",\n    measurementId: \"G-PEGRYK109L\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React from \"react\";\n\nconst Rules = () => {\n    return (\n        <>\n            <div className=\"gameTitle\">\n                <span>정확하고 빠르게</span>\n            </div>\n            <div style={{\n                backgroundColor: \"white\",\n                borderRadius: 20,\n                color: \"#f21170\",\n                maxWidth: 280,\n                marginTop: 30\n            }}>\n                <div style={{\n                    padding: \"10px 15px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                }}>\n                    <span style={{ marginBottom: 0, fontWeight: \"bold\" }}>게임규칙</span>\n                    <div className=\"gameRules\">\n                        <h5>1. 사진을 보고 정답을 빠르게 클릭 해 주세요.</h5>\n                        <h5>2. 빠르게 누를수록 높은 점수를 얻습니다.</h5>\n                        <h5>3. 빠르게 눌러도 정답이 아닐 경우 0점 처리됩니다.</h5>\n                        <h5>4. 게임은 총 10 라운드 진행합니다.</h5>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default Rules;","import React from \"react\";\n\nconst GameEnd = ({ accuracy, speed }) => {\n    return (\n        <div>\n            <div>\n                <span>게임 결과</span>\n            </div>\n            <div>\n                <span>정확도 : {accuracy}</span>\n            </div>\n            <div>\n                <span>속도 : {speed}</span>\n            </div>\n            <span>총 점 : {accuracy + speed}</span>\n        </div>\n    );\n}\n\nexport default GameEnd;","import React, { useEffect, useState } from \"react\";\nimport { storageService } from \"fbase\";\nimport ProblemNameData from \"../../datas/game01/game01_name.json\";\nimport MappingData from \"../../datas/game01/game01.json\";\n\nimport GameEnd from \"./GameEnd\";\n\nconst GameStart = () => {\n    const [round, setRound] = useState(1);\n    const [problemImage, setProblemImage] = useState(\"\");\n    const [items, setItems] = useState([]);\n    const [answer, setAnswer] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [accuracy, setAccuracy] = useState(0);\n    const [speed, setSpeed] = useState(0);\n    const [startTime, setStartTime] = useState(0);\n\n    const storageRef = storageService.ref();\n\n    const AnimalList = [\"cat\", \"dog\", \"rabbit\", \"turtle\", \"snake\"];\n    // 문제 종류 수 \n    const max = AnimalList.length;\n\n    const getOtherChocie = (itemsObj) => {\n        while (true) {\n            const other = Math.floor(Math.random() * (max - 1)) + 1;\n            if (itemsObj.indexOf(other) <= -1) itemsObj.push(other);\n            if (itemsObj.length === 3) return itemsObj;\n        }\n    }\n\n    const getImageName = (animalEnName) => {\n        const imageNumber = Math.floor(Math.random() * (5)).toString();\n        const imageName = MappingData[animalEnName][imageNumber];\n        return imageName;\n    }\n\n    const suffleItems = (items) => {\n        const l = items.length;\n        let itemsObj;\n        for (let i = 0; i < l; ++i) {\n            let j = Math.floor(Math.random() * (i + 1));\n            itemsObj = Array.from(items);\n            const x = itemsObj[i];\n            itemsObj[i] = itemsObj[j];\n            itemsObj[j] = x;\n        }\n\n        setItems(itemsObj);\n    }\n\n    const loadProblem = async () => {\n        // 서로 다른 번호 두개 추출\n        const choose = Math.floor(Math.random() * (max - 1)) + 1;\n        let itemsObj = [choose];\n        itemsObj = getOtherChocie(itemsObj);\n\n        setItems(itemsObj);\n        suffleItems(itemsObj);\n\n        const animalEnName = AnimalList[choose];\n        setAnswer(animalEnName);\n\n        const imageName = getImageName(animalEnName);\n\n        const url = await storageRef.child(`${animalEnName}/${imageName}`).getDownloadURL();\n\n        setProblemImage(url);\n    }\n\n    useEffect(async () => {\n        setLoading(false);\n        await loadProblem();\n        setLoading(true);\n        setStartTime(new Date());\n    }, [round]);\n\n\n    const onClick = (e) => {\n        const { target: { name } } = e;\n\n        if (answer === name) setAccuracy(accuracy + 5);\n\n        const endTime = new Date();\n\n        const stopTime = (endTime - startTime) / 1000;\n\n        if (stopTime < 0.3) setSpeed(speed + 5);\n        else if (stopTime > 1.5) setSpeed(speed + 1);\n        else if (stopTime > 1) setSpeed(speed + 2);\n        else if (stopTime > 0.7) setSpeed(speed + 3);\n        else if (stopTime >= 0.3) setSpeed(speed + 4);\n        setRound(round + 1);\n    }\n\n    return (\n        <>\n            {round < 11 ?\n                <>\n                    {loading ?\n                        <div\n                            className=\"gameBoard\"\n                            style={{\n                                marginTop: 50,\n                                backgroundColor: \"white\",\n                                padding: \"20px 30px\",\n                                borderRadius: \"20px\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\"\n                            }}>\n                            <div className=\"roundTitle\">\n                                <h3>라운드 {round}</h3>\n                            </div>\n                            <img src={problemImage} width=\"150px\" height=\"150px\" />\n                            {items &&\n                                items.map(item =>\n                                    <button name={AnimalList[item]} className=\"btn\" onClick={onClick}>{ProblemNameData[AnimalList[item]]}</button>\n                                )\n                            }\n                        </div>\n                        :\n                        <span>Loading...</span>\n                    }\n                </>\n                :\n                <GameEnd accuracy={accuracy} speed={speed} />\n            }\n\n        </>\n    );\n}\n\nexport default GameStart;","import React, { useEffect, useState } from \"react\";\nimport { storageService } from \"fbase\";\n\nimport Rules from \"../components/Game01/Rules\";\nimport GameStart from \"../components/Game01/GameStart\";\nimport { useHistory } from \"react-router\";\n\nconst Game01 = ({ userObj }) => {\n    const [mode, setMode] = useState(\"\");\n    const history = useHistory();\n    const checkedPage = () => {\n        if (!userObj) return false;\n        return true;\n    }\n    useEffect(() => {\n        if (!checkedPage()) {\n            history.push(\"/\");\n        }\n    }, []);\n\n    const onModeClick = (e) => {\n        const { target: { name } } = e;\n        setMode(name);\n    }\n    console.log(userObj);\n    return (\n        <>\n            {mode ?\n                <GameStart />\n                :\n                <>\n                    <Rules />\n                    <button\n                        id=\"beginner\"\n                        name=\"beginner\"\n                        onClick={onModeClick}\n                        className=\"btn\"\n                    >초보자 모드</button>\n                    <button\n                        id=\"expert\"\n                        name=\"expert\"\n                        onClick={onModeClick}\n                        className=\"btn\"\n                    >숙련자 모드</button>\n                </>\n            }\n\n        </>\n    )\n}\n\nexport default Game01;","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"../routes/Home\";\nimport Auth from \"../routes/Auth\";\nimport Game01 from \"../routes/Game01\";\n\nconst AppRouter = ({ userObj }) => {\n    return (\n        <Router>\n            <Switch>\n                <div style={{\n                    width: \"100%\",\n                    maxWidth: 980,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                }}>\n                    {userObj !== \"\" ?\n                        <>\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/game01\">\n                                <Game01 userObj={userObj} />\n                            </Route>\n                        </>\n                        :\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    }\n                </div>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\n// routes\nimport Loading from \"./Loading\";\nimport AppRouter from \"./Router\";\n\nconst App = () => {\n  const userObj = useSelector(state => state.user)\n  return (\n    <>\n      <AppRouter userObj={userObj} />\n    </>\n  );\n}\n\nexport default App;","import { combineReducers } from \"@reduxjs/toolkit\";\nimport userSlice from \"./Users\";\n\nconst reducers = combineReducers({\n    user: userSlice.reducer\n});\n\nexport default reducers;\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport reducers from \"./reducers/root\";\n\nconst store = configureStore({ reducer: reducers });\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n\n  <Provider store={store} >\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}